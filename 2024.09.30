Introduction to Programming Languages

       Определение и цель

Программный язык это формальный язык,
состоящий из набора инструкций,
которые производят различные виды результатов и 
используются для реализации алгоритмов и взаимодействия с компьютерами.

        Основная цель: 
помочь людям передавать задачи компьютерам на языке,
который компьютер может выполнять.

Аналогия

Сравните программные языки с языками человеческими. 
Так же, как разные языки могут использоваться для того, 
чтобы поздороваться в разных культурах, различные программные языки
могут использоваться для выполнения одной и той же задачи в вычислениях 
с разными синтаксисами и функциями..


Introduction to Programming Languages

* Короткая история

История программирования началась с ранних компьютеров,
использующих переключатели и перфокарты для кодирования задач.
Появление языков, таких как FORTRAN и COBOL, облегчило написание более сложных программ. 
Со временем, языки как С и С++ внедрили структурное и объектно-ориентированное программирование,
расширяя возможности разработки. Развитие интернета привело к созданию языков для веба, 
таких как JavaScript и Java, которые стали основой для современных веб-приложений и сайтов.



       Introduction to Programming Languages

High-Level Languages

Характеристики: Более понятны для человека, ближе к естественному языку,
обычно требуют перевода в машинный язык с помощью компиляторов или интерпретаторов.

Примеры: Python, Java, C#,

Применение: Веб-приложения, разработка программного обеспечения, мобильные приложения.


Low-Level Languages

Характеристики: Ближе к машинному языку, сложнее для понимания человеком, 
быстрее в исполнении.

Примеры: Ассемблер, С.

Применение: Разработка операционных систем, системы реального времени, встроенные системы,


         - "Какой тип языков, по вашему мнению, будет более сложным для изучения новичком и почему?"

Introduction to Programming Languages

Ассемблер, двоичный код и Python представляют собой различные уровни абстракции в программировании,
каждый из которых имеет свои особенности и применение:

Двоичный код

«Уровень абстракции: Очень низкий. 
Прямое представление инструкций для процессора.

Читаемость: Трудно читаем без специальных инструментов.
Производительность Максимальная, код выполняется напрямую процессором.

«Использование: Исполняется процессором, не предназначен для ручного программирования.

Ассемблер

«Уровень абстракции: Низкий. Преобразует машинный код в понятные мнемоники,
требует знания аппаратуры.

«Читаемость: Сложнее высокоуровневых языков, но доступнее, чем двоичный код.

«Производительность. Высокая за счет точной настройки аппаратных ресурсов.

«Использование: Разработка встроенных и операционных систем, требующих контроля над аппаратурой.


Python

«Уровень абстракции: Высокий. Python облегчает программирование за счет абстракций по сравнению с

низкоуровневыми языками.
«Читаемость: Очень высока, благодаря чистому и простому синтаксису.

«Производительность: Ниже низкоуровневых языков из-за абстрагирования управления памятью.

«Использование: Веб-разработка, научные исследования, машинное обучение,
автоматизация и другие сферы, но требующие высокой производительности оборудования

       Introduction to Programming Languages

1. Web-разработка

Frontend: JavaScript, TypeScript, HTML/CSS

Backend: JavaScript (Node.js), Python (Django, Flask), Ruby (Rails), PHP, Java (Spring), Cit (ASP.NET)

Full Stack: JavaScript, Python, Ruby, PHP

2. Мобильная разработка

IOS: Swift, Objective-C

Android: Kotlin, Java •Кроссплатформенная: JavaScript (React Native), Dart (Flutter)

3. Разработка игр •2D и 3D игры: С (Unity), C++ (Unreal Engine) «Мобильные игры: Swift для iOS, Kotlin и Java для Android, C# (Unity)

4. Data Scienсе и Машинное обучение

•Анализ данных: Python (Pandas, NumPy), R «Машинное обучение: Python (Scikit-learn, TensorFlow, PyTorch)

5. Искусственный интеллект

«Разработка алгоритмов Al: Python (TensorFlow, Keras, PyTorch), Julia



* Подготовиться на темы: дз

Backend development

Frontend development

Web development

* На вопросы:

• Что это?

• Для чего нужно?

• Как используется?

• Какие основные характеристики?

• Как создается?

Какие есть основные правила?

* Какие языки программирования используются?
